# Generated by Django 2.1.2 on 2018-10-11 20:26

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('c_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.CharField(default='', max_length=500)),
                ('logo', models.ImageField(blank=True, upload_to='channel_logo_images')),
                ('no_of_subscriptions', models.IntegerField(default=0)),
                ('creation_datetime', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('status', models.BooleanField(default=True, help_text='Designates whether the Channel is active or not.', verbose_name='Channel status')),
            ],
        ),
        migrations.CreateModel(
            name='channel_actions',
            fields=[
                ('ca_id', models.AutoField(primary_key=True, serialize=False)),
                ('report_status', models.NullBooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Channel_tags',
            fields=[
                ('c_id', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='channel_thread_actions',
            fields=[
                ('cta_id', models.AutoField(primary_key=True, serialize=False)),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('ld_status', models.NullBooleanField()),
                ('report_status', models.NullBooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Channel_threads',
            fields=[
                ('ct_id', models.AutoField(primary_key=True, serialize=False)),
                ('typ', models.CharField(choices=[('A', 'Assertive'), ('Q', 'Question')], max_length=200)),
                ('description', models.CharField(default='', max_length=500)),
                ('no_of_likes', models.IntegerField(default=0)),
                ('no_of_dislikes', models.IntegerField(default=0)),
                ('no_of_reports', models.IntegerField(default=0)),
                ('creation_datetime', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('status', models.BooleanField(default=True, help_text='Designates whether the Channel_thread is active or not.', verbose_name='Channel_thread status')),
                ('c_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='channel.Channel')),
                ('ct_id_reply_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='channel.Channel_threads')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('p_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.CharField(default='', max_length=500)),
                ('no_of_likes', models.IntegerField(default=0)),
                ('no_of_dislikes', models.IntegerField(default=0)),
                ('no_of_reports', models.IntegerField(default=0)),
                ('creation_datetime', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('status', models.BooleanField(default=True, help_text='Designates whether the Post is active or not.', verbose_name='Post status')),
                ('c_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='channel.Channel')),
            ],
        ),
        migrations.CreateModel(
            name='post_actions',
            fields=[
                ('pa_id', models.AutoField(primary_key=True, serialize=False)),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('ld_status', models.NullBooleanField()),
                ('report_status', models.NullBooleanField()),
                ('p_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='channel.Post')),
            ],
        ),
        migrations.CreateModel(
            name='post_file_actions',
            fields=[
                ('pfa_id', models.AutoField(primary_key=True, serialize=False)),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('ld_status', models.NullBooleanField()),
                ('report_status', models.NullBooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Post_files',
            fields=[
                ('pf_id', models.AutoField(primary_key=True, serialize=False)),
                ('file_type', models.CharField(max_length=200)),
                ('file', models.FileField(upload_to='post_files/')),
                ('upload_datetime', models.DateTimeField(auto_now_add=True, verbose_name='upload date and time')),
                ('no_of_likes', models.IntegerField(default=0)),
                ('no_of_dislikes', models.IntegerField(default=0)),
                ('no_of_reports', models.IntegerField(default=0)),
                ('status', models.BooleanField(default=True, help_text='Designates whether the File uploaded is active or not.', verbose_name='Post status')),
                ('p_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='channel.Post')),
            ],
        ),
        migrations.CreateModel(
            name='Post_tags',
            fields=[
                ('p_id', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='post_thread_actions',
            fields=[
                ('pta_id', models.AutoField(primary_key=True, serialize=False)),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('ld_status', models.NullBooleanField()),
                ('report_status', models.NullBooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Post_threads',
            fields=[
                ('pt_id', models.AutoField(primary_key=True, serialize=False)),
                ('typ', models.CharField(choices=[('A', 'Assertive'), ('Q', 'Question')], max_length=200)),
                ('description', models.CharField(default='', max_length=500)),
                ('no_of_likes', models.IntegerField(default=0)),
                ('no_of_dislikes', models.IntegerField(default=0)),
                ('no_of_reports', models.IntegerField(default=0)),
                ('creation_datetime', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('status', models.BooleanField(default=True, help_text='Designates whether the Post_thread is active or not.', verbose_name='Post_thread status')),
                ('p_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='channel.Post')),
                ('pt_id_reply_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='channel.Post_threads')),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('s_id', models.AutoField(primary_key=True, serialize=False)),
                ('s_datetime', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('c_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='channel.Channel')),
            ],
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('t_id', models.AutoField(primary_key=True, serialize=False)),
                ('tag_name', models.CharField(max_length=200)),
                ('no_of_use', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('u_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(max_length=200, unique=True)),
                ('status', models.BooleanField(default=True, help_text='Designates whether the User is active or not.', verbose_name='User status')),
            ],
        ),
        migrations.AddField(
            model_name='subscription',
            name='u_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='channel.User'),
        ),
        migrations.AddField(
            model_name='post_threads',
            name='u_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='channel.User'),
        ),
        migrations.AddField(
            model_name='post_thread_actions',
            name='pt_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='channel.Post_threads'),
        ),
        migrations.AddField(
            model_name='post_thread_actions',
            name='u_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='channel.User'),
        ),
        migrations.AddField(
            model_name='post_tags',
            name='t_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='channel.Tags'),
        ),
        migrations.AddField(
            model_name='post_file_actions',
            name='pf_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='channel.Post_files'),
        ),
        migrations.AddField(
            model_name='post_file_actions',
            name='u_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='channel.User'),
        ),
        migrations.AddField(
            model_name='post_actions',
            name='u_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='channel.User'),
        ),
        migrations.AddField(
            model_name='post',
            name='u_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='channel.User'),
        ),
        migrations.AddField(
            model_name='channel_threads',
            name='u_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='channel.User'),
        ),
        migrations.AddField(
            model_name='channel_thread_actions',
            name='ct_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='channel.Channel_threads'),
        ),
        migrations.AddField(
            model_name='channel_thread_actions',
            name='u_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='channel.User'),
        ),
        migrations.AddField(
            model_name='channel_tags',
            name='t_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='channel.Tags'),
        ),
        migrations.AddField(
            model_name='channel_actions',
            name='u_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='channel.User'),
        ),
        migrations.AddField(
            model_name='channel',
            name='u_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='channel.User'),
        ),
    ]
